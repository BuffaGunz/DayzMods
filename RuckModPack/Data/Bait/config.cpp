class CfgPatches
{
	class RuckModPack_Bait
	{
		units[] = {};
		weapons[] = {};
		requiredVersion = 0.1;
		requiredAddons[] = {"DZ_Gear_Food"};
	};
};
class CfgVehicles
{
	class Inventory_Base;
	class Edible_Base;
	class Guts: Edible_Base
	{
		inventorySlot[]=
		{
			"Guts",
			"Bait"
		};
	    class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};	
	class Candycane_Colorbase: Edible_Base
	{
		
		inventorySlot[]=
		{
			"WalkieTalkie",
			"Chemlight",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class Apple: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class Plum: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait",
			"Trap_Bait_2",
			"Bait"
			
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};	
	class Pear: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait",
			"Trap_Bait_2",
			"Bait"
			
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};	
	class Banana: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};	
	class Orange: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};	
	class Tomato: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};	
	class GreenBellPepper: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};	
	class Zucchini: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};	
	class SlicedPumpkin: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class Potato: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class Kiwi: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};	
	class SambucusBerry: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"BerryB",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class CaninaBerry: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"BerryR",
			"Bait"
			
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class Cannabis: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
		class HumanSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class GoatSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class MouflonSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class BoarSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class PigSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class DeerSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class ReindeerSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class WolfSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class BearSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class CowSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class SheepSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class FoxSteakMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class ChickenBreastMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class RabbitLegMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class CarpFilletMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class MackerelFilletMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class WalleyePollockFilletMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class SteelheadTroutFilletMeat: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Trap_Bait_2",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class Lard: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class Shrimp: Edible_Base
	{
		inventorySlot[]=
		{
			"Ingredient",
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class Sardines: Edible_Base
	{
		inventorySlot[]=
		{
			"DirectCookingA",
			"DirectCookingB",
			"DirectCookingC",
			"SmokingA",
			"SmokingB",
			"SmokingC",
			"SmokingD",
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
	class MushroomBase: Edible_Base
	{
		inventorySlot[]=
		{
			"Bait"
		};
		class Fishing
		{
			signalCycleTargetAdjustment=-11;
			signalCycleTargetEndAdjustment=-17;
			signalDurationMin=1.1;
			signalDurationMax=1.4;
			resultQuantityBaseMod=0;
			resultQuantityDispersionMin=0.2;
			resultQuantityDispersionMax=0.30000001;
			hookLossChanceMod=0;
			baitLossChanceMod=0.8;
		};
	};
};	
 